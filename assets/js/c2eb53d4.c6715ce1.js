"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5853],{2118:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"weather-and-science/quality-mechanisms/obc-sqc-annotations","title":"OBC and SQC Annotations","description":"The QoD algorithm produces annotation codes associated with various weather parameters to provide a detailed description of a specific condition for each parameter. These codes serve as a standard format of communication between the various services that use them and they will be mapped to user-friendly messages on the clients.","source":"@site/docs/weather-and-science/quality-mechanisms/obc-sqc-annotations.mdx","sourceDirName":"weather-and-science/quality-mechanisms","slug":"/weather-and-science/quality-mechanisms/obc-sqc-annotations.mdx","permalink":"/weather-and-science/quality-mechanisms/obc-sqc-annotations.mdx","draft":false,"unlisted":false,"editUrl":"https://github.com/WeatherXM/docs/blob/main/docs/weather-and-science/quality-mechanisms/obc-sqc-annotations.mdx","tags":[],"version":"current","frontMatter":{"id":"obc-sqc-annotations","title":"OBC and SQC Annotations","sidebar_label":"OBC and SQC Annotations","slug":"/weather-and-science/quality-mechanisms/obc-sqc-annotations.mdx"},"sidebar":"docs","previous":{"title":"Indoors Station Detector (ISD)","permalink":"/weather-and-science/quality-mechanisms/isd-full-documentation.mdx"},"next":{"title":"Out-of-Bounds (OBC) and Self Quality Checks (SQC)","permalink":"/weather-and-science/quality-mechanisms/obc-sqc-documentation.mdx"}}');var s=n(4848),d=n(8453);const a={id:"obc-sqc-annotations",title:"OBC and SQC Annotations",sidebar_label:"OBC and SQC Annotations",slug:"/weather-and-science/quality-mechanisms/obc-sqc-annotations.mdx"},r="Out-of-Bounds (OBC) and Self Quality Checks (SQC) Annotations",o={},c=[{value:"Parameters under Investigation",id:"parameters-under-investigation",level:2},{value:"Hourly Level Annotation",id:"hourly-level-annotation",level:2}];function l(e){const t={h1:"h1",h2:"h2",header:"header",p:"p",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"out-of-bounds-obc-and-self-quality-checks-sqc-annotations",children:"Out-of-Bounds (OBC) and Self Quality Checks (SQC) Annotations"})}),"\n",(0,s.jsx)(t.p,{children:"The QoD algorithm produces annotation codes associated with various weather parameters to provide a detailed description of a specific condition for each parameter. These codes serve as a standard format of communication between the various services that use them and they will be mapped to user-friendly messages on the clients."}),"\n",(0,s.jsx)(t.h2,{id:"parameters-under-investigation",children:"Parameters under Investigation"}),"\n",(0,s.jsx)(t.p,{children:"The following is a table of all parameters characterized by QoD."}),"\n",(0,s.jsx)("p",{align:"center",children:(0,s.jsx)("b",{children:"Table \u2013 Parameters considered in the analysis"})}),"\n",(0,s.jsxs)("table",{align:"center",children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Parameter"}),(0,s.jsx)("th",{children:"Index"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Temperature"}),(0,s.jsx)("td",{children:"1"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Humidity"}),(0,s.jsx)("td",{children:"2"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Wind speed"}),(0,s.jsx)("td",{children:"3"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Wind direction"}),(0,s.jsx)("td",{children:"4"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Pressure"}),(0,s.jsx)("td",{children:"5"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Illuminance"}),(0,s.jsx)("td",{children:"6"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Accumulated precipitation"}),(0,s.jsx)("td",{children:"7"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"hourly-level-annotation",children:"Hourly Level Annotation"}),"\n",(0,s.jsx)("p",{align:"center",children:(0,s.jsx)("b",{children:"Table \u2013 List of annotations and their definitions"})}),"\n",(0,s.jsxs)("table",{align:"center",children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Annotation"}),(0,s.jsx)("th",{children:"Annotation code"}),(0,s.jsx)("th",{children:"Derives from level"}),(0,s.jsx)("th",{children:"Applies to"}),(0,s.jsx)("th",{children:"Description"}),(0,s.jsx)("th",{children:"Version"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"OBC"}),(0,s.jsx)("td",{children:"OBC"}),(0,s.jsx)("td",{children:"Raw"}),(0,s.jsx)("td",{children:"All parameters"}),(0,s.jsx)("td",{children:"Values out of bounds, related to the sensor\u2019s spec. Faulty sensor or firmware."}),(0,s.jsx)("td",{children:"1.0.0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Raw spikes"}),(0,s.jsx)("td",{children:"SPIKE_INST"}),(0,s.jsx)("td",{children:"Raw"}),(0,s.jsx)("td",{children:"All except precipitation and wind direction"}),(0,s.jsx)("td",{children:"Two consecutive values vary more than physically possible. Faulty sensor or bad deployment."}),(0,s.jsx)("td",{children:"1.0.0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"No median"}),(0,s.jsx)("td",{children:"NO_MEDIAN"}),(0,s.jsx)("td",{children:"Raw"}),(0,s.jsx)("td",{children:"All except precipitation and wind direction"}),(0,s.jsx)("td",{children:"Not enough data points to infer the median value of the aggregated time window. Connection issues (internet or Helium network). Useful also to identify the reason for spikes."}),(0,s.jsx)("td",{children:"<=1.0.2"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Unidentified spikes"}),(0,s.jsx)("td",{children:"UNIDENTIFIED_SPIKE"}),(0,s.jsx)("td",{children:"Raw"}),(0,s.jsx)("td",{children:"All except precipitation and wind direction"}),(0,s.jsx)("td",{children:"Two consecutive values vary more than physically possible, but not enough data points to infer the median and identify which values are erroneous. Faulty sensor or bad deployment."}),(0,s.jsx)("td",{children:">=1.0.4"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"N/A data"}),(0,s.jsx)("td",{children:"NO_DATA"}),(0,s.jsx)("td",{children:"Raw"}),(0,s.jsx)("td",{children:"All parameters"}),(0,s.jsx)("td",{children:"No data in the aggregated time window. Connection issues (internet or Helium network)."}),(0,s.jsx)("td",{children:"1.0.0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Short Constant"}),(0,s.jsx)("td",{children:"SHORT_CONST"}),(0,s.jsx)("td",{children:"Raw"}),(0,s.jsx)("td",{children:"All except precipitation"}),(0,s.jsx)("td",{children:"Value not changed in the aggregated time window, shorter than the entire reference day (e.g. a few hours). Faulty sensor or bad deployment."}),(0,s.jsx)("td",{children:"1.0.0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Long Constant"}),(0,s.jsx)("td",{children:"LONG_CONST"}),(0,s.jsx)("td",{children:"Raw"}),(0,s.jsx)("td",{children:"All except humidity, illuminance, precipitation"}),(0,s.jsx)("td",{children:"Value not changed for 24 hours. Faulty sensor or bad deployment."}),(0,s.jsx)("td",{children:"1.0.0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Frozen Sensor"}),(0,s.jsx)("td",{children:"FROZEN_SENSOR"}),(0,s.jsx)("td",{children:"Raw"}),(0,s.jsx)("td",{children:"Wind speed and wind direction"}),(0,s.jsx)("td",{children:"Not measuring wind speed, wind direction is constant and temperature below zero. Frozen sensor."}),(0,s.jsx)("td",{children:"1.0.0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Minute Spikes"}),(0,s.jsx)("td",{children:"ANOMALOUS_INCREASE"}),(0,s.jsx)("td",{children:"Minute"}),(0,s.jsx)("td",{children:"All except precipitation and wind direction"}),(0,s.jsx)("td",{children:"Two consecutive minute averages vary more than physically possible. Bad deployment (possible) / Faulty Sensor (less possible)."}),(0,s.jsx)("td",{children:"1.0.0"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Unidentified change"}),(0,s.jsx)("td",{children:"UNIDENTIFIED_ANOMALOUS_CHANGE"}),(0,s.jsx)("td",{children:"Minute"}),(0,s.jsx)("td",{children:"All except precipitation and wind direction"}),(0,s.jsx)("td",{children:"Two consecutive values vary more than physically possible, but not enough data points to infer the median and identify which values are erroneous. Bad deployment (possible) / Faulty Sensor (less possible)."}),(0,s.jsx)("td",{children:">=1.0.4"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:'Note that there are two spike annotations. The one arises in raw level and the other in minute level. In order to distinguish between them, we refer to the raw spike annotation as SPIKE_INST and to the minute spike as ANOMALOUS_INCREASE. Thus, SPIKE_INST implies that there was an instant spike in one or more of the data packets that we received and is highly likely to be due to faulty sensor and less (but still) likely to be due to bad deployment. On the other hand, ANOMALOUS_INCREASE implies that there was suspicious change when comparing consecutive minute averages. This could be possibly due to bad deployment (e.g., gradual increase in temperature due to a chimney that started working), but we cannot exclude the case of faulty sensor.\nUNIDENTIFIED_SPIKE and UNIDENTIFIED_ANOMALOUS_CHANGE label all values that appear suspicious for spikes or dips, in contrast to "SPIKE_INST" and "ANOMALOUS_INCREASE" annotations, which exclusively label the spike or dip value itself. This implies that the user will receive a different Quality of Data (QoD) score if either of the first two annotations is activated, compared to the two latter annotations.'})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const s={},d=i.createContext(s);function a(e){const t=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(d.Provider,{value:t},e.children)}}}]);